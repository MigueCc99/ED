<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="class_ingredientes" kind="class" language="C++" prot="public">
    <compoundname>Ingredientes</compoundname>
    <includes refid="ingredientes_8h" local="no">ingredientes.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_ingredientes_1a31bdcd26b6c718d1f09ea93ed5a5b0b1" prot="private" static="no" mutable="no">
        <type><ref refid="class_vector___dinamico" kindref="compound">Vector_Dinamico</ref>&lt; Ingrediente &gt;</type>
        <definition>Vector_Dinamico&lt;Ingrediente&gt; Ingredientes::datos</definition>
        <argsstring></argsstring>
        <name>datos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>datos </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ingredientes.h" line="47" column="21" bodyfile="include/ingredientes.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_ingredientes_1a4599533b7d0530fe6fdd68006b3f0bde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Ingredientes::Ingredientes</definition>
        <argsstring>()</argsstring>
        <name>Ingredientes</name>
        <briefdescription>
<para>Constructor por defecto de la clase. Crea el conjunto de ingredientes vacío. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ingredientes.h" line="53" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_ingredientes_1aa49df6c8d8c48cca8591a620b2d15cc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ingredientes::insertarIngrediente</definition>
        <argsstring>(const Ingrediente &amp;ingrediente)</argsstring>
        <name>insertarIngrediente</name>
        <param>
          <type>const Ingrediente &amp;</type>
          <declname>ingrediente</declname>
        </param>
        <briefdescription>
<para>insertarIngrediente </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ingrediente</parametername>
</parameternamelist>
<parameterdescription>
<para>Ingrediente a insertar </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Inserta en el objeto implícito el Ingrediente </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ingredientes.h" line="59" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_ingredientes_1aaf94717166c3e624390ac5abe136d06a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ingredientes::borrarIngrediente</definition>
        <argsstring>(const int nroIngrediente)</argsstring>
        <name>borrarIngrediente</name>
        <param>
          <type>const int</type>
          <declname>nroIngrediente</declname>
        </param>
        <briefdescription>
<para>borrarIngrediente </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nroIngrediente</parametername>
</parameternamelist>
<parameterdescription>
<para>posición del Ingrediente a borrar </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Borra el Ingrediente de la posición nroIngrediente del objeto implícito </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ingredientes.h" line="66" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_ingredientes_1a7c0b7746dfc25fba382518fe8522a046" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ingredientes::borrarIngredienteXNombre</definition>
        <argsstring>(const string &amp;nombre)</argsstring>
        <name>borrarIngredienteXNombre</name>
        <param>
          <type>const string &amp;</type>
          <declname>nombre</declname>
        </param>
        <briefdescription>
<para>borraIngredienteXNombre </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nombre</parametername>
</parameternamelist>
<parameterdescription>
<para>del Ingrediente a borrar </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Borra el Ingrediente del conjunto cuyo nombre coincide con el parámetro </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ingredientes.h" line="73" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_ingredientes_1a7e56b2666e0c566ba5799d8848669dd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ingredientes::modificaIngrediente</definition>
        <argsstring>(const int i, const Ingrediente &amp;ingrediente)</argsstring>
        <name>modificaIngrediente</name>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const Ingrediente &amp;</type>
          <declname>ingrediente</declname>
        </param>
        <briefdescription>
<para>modificaIngrediente </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>posición del Ingrediente a modificar </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ingrediente</parametername>
</parameternamelist>
<parameterdescription>
<para>Ingrediente para modificar </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Modifica el Ingrediente de la posición i por el &quot;ingrediente&quot; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ingredientes.h" line="81" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_ingredientes_1aeb8017d2e1182f78e3935ca72b766ef8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Ingrediente</type>
        <definition>Ingrediente Ingredientes::getIngrediente</definition>
        <argsstring>(const int i)</argsstring>
        <name>getIngrediente</name>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>getIngrediente </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>posición del Ingrediente </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Devuelve el Ingrediente de la posición i </para>
</simplesect>
<simplesect kind="pre"><para>i debe de ser un valor válido </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ingredientes.h" line="89" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_ingredientes_1a97dea81c4db6348691c55e9db5ef3619" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Ingrediente</type>
        <definition>Ingrediente Ingredientes::get</definition>
        <argsstring>(const string &amp;nombre)</argsstring>
        <name>get</name>
        <param>
          <type>const string &amp;</type>
          <declname>nombre</declname>
        </param>
        <briefdescription>
<para>get </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nombre</parametername>
</parameternamelist>
<parameterdescription>
<para>nombre del ingrediente </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Devuelve el Ingrediente cuyo nombre es equivalente al parametro </para>
</simplesect>
<simplesect kind="pre"><para>nombre debe de ser un nombre válido </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ingredientes.h" line="97" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_ingredientes_1a485db5688382e8068feb4680caea9a5f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const int</type>
        <definition>const int Ingredientes::getNumIngredientes</definition>
        <argsstring>() const</argsstring>
        <name>getNumIngredientes</name>
        <briefdescription>
<para>getNumIngredientes </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Devuelve el número de ingredientes del conjunto </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ingredientes.h" line="103" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_ingredientes_1a2f30f251726c114a425e655a07a21d80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Ingredientes::getInformacion</definition>
        <argsstring>(const string nombre)</argsstring>
        <name>getInformacion</name>
        <param>
          <type>const string</type>
          <declname>nombre</declname>
        </param>
        <briefdescription>
<para>getInformación </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nombre</parametername>
</parameternamelist>
<parameterdescription>
<para>nombre del ingrediente </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Devuelve la nformación del ingrediente cuyo nombre es equivalente al parametro </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ingredientes.h" line="110" column="12"/>
      </memberdef>
      <memberdef kind="function" id="class_ingredientes_1a6f9df794709a67caddd0d89ab38e9ed3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_vector___dinamico" kindref="compound">Vector_Dinamico</ref>&lt; string &gt;</type>
        <definition>Vector_Dinamico&lt;string&gt; Ingredientes::getTipos</definition>
        <argsstring>()</argsstring>
        <name>getTipos</name>
        <briefdescription>
<para>getTipos </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Devuelve un <ref refid="class_vector___dinamico" kindref="compound">Vector_Dinamico</ref> de tipo string con los tipos de los ingredientes del conjunto </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ingredientes.h" line="116" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_ingredientes_1ad49a4d1142a214e8c077871efed59c60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ingredientes" kindref="compound">Ingredientes</ref></type>
        <definition>Ingredientes Ingredientes::getIngredientesTipo</definition>
        <argsstring>(const string tipo)</argsstring>
        <name>getIngredientesTipo</name>
        <param>
          <type>const string</type>
          <declname>tipo</declname>
        </param>
        <briefdescription>
<para>getIngredientesTipos </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tipo</parametername>
</parameternamelist>
<parameterdescription>
<para>tipo de los ingredientes a buscar </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="class_ingredientes" kindref="compound">Ingredientes</ref> cuyo tipo coincide con el parametro tipo </para>
</simplesect>
<simplesect kind="pre"><para>tipo existente </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ingredientes.h" line="124" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_ingredientes_1ac1a637a4b2fb6e7ce99f59ffea7e5eec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Ingrediente &amp;</type>
        <definition>Ingrediente&amp; Ingredientes::operator[]</definition>
        <argsstring>(const int i)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Sorbrecarga del operador[]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>entero que indica una posicion </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Ingrediente de la posicion i </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ingredientes.h" line="131" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_ingredientes_1a2279d66f71d1fdc39f8560b406d83760" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const Ingrediente &amp;</type>
        <definition>const Ingrediente&amp; Ingredientes::operator[]</definition>
        <argsstring>(const int i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Sorbrecarga constante del operador[]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>entero que indica una posicion </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Ingrediente de la posicion i </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ingredientes.h" line="138" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_ingredientes_1a44039882f9e87d1e6fc0a97bf9cac579" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ingredientes::ordenaPorNombre</definition>
        <argsstring>()</argsstring>
        <name>ordenaPorNombre</name>
        <briefdescription>
<para>ordenaPorNombre </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>ordena los <ref refid="class_ingredientes" kindref="compound">Ingredientes</ref> por orden alfabético </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ingredientes.h" line="144" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_ingredientes_1aea7daaebce685d1edacada5fd79034bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ingredientes" kindref="compound">Ingredientes</ref></type>
        <definition>Ingredientes Ingredientes::ordenaPorTipo</definition>
        <argsstring>()</argsstring>
        <name>ordenaPorTipo</name>
        <briefdescription>
<para>ordenaPorTipo </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>ordena los <ref refid="class_ingredientes" kindref="compound">Ingredientes</ref> por tipo y los devuelve en un objeto de tipo <ref refid="class_ingredientes" kindref="compound">Ingredientes</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ingredientes.h" line="150" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_ingredientes_1ab56b335eeb1662c1869d428df28fb035" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ingredientes::imprimirPorTipo</definition>
        <argsstring>(ostream &amp;os)</argsstring>
        <name>imprimirPorTipo</name>
        <param>
          <type>ostream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
<para>ordenaPorTipo </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>ordena los <ref refid="class_ingredientes" kindref="compound">Ingredientes</ref> del objeto implícito en otra instancia de <ref refid="class_ingredientes" kindref="compound">Ingredientes</ref> por tipo y la imprime </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ingredientes.h" line="157" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_ingredientes_1a11a8ab6e1628b050812fbf57b33265ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend ostream &amp;</type>
        <definition>ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(ostream &amp;os, const Ingredientes &amp;ingredientes)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="class_ingredientes" kindref="compound">Ingredientes</ref> &amp;</type>
          <declname>ingredientes</declname>
        </param>
        <briefdescription>
<para>Salida de <ref refid="class_ingredientes" kindref="compound">Ingredientes</ref> a ostream. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>stream de salida </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ingredientes</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_ingredientes" kindref="compound">Ingredientes</ref> a escribir </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="post"><para>Se obtiene en <emphasis>os</emphasis> los ingredientes con <emphasis>ingrediente</emphasis> los ingredientes del conjunto </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ingredientes.h" line="165" column="12"/>
      </memberdef>
      <memberdef kind="friend" id="class_ingredientes_1a2f2a26cb7e5d982fcbe248027671937d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend istream &amp;</type>
        <definition>istream&amp; operator&gt;&gt;</definition>
        <argsstring>(istream &amp;is, Ingredientes &amp;ingredientes)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="class_ingredientes" kindref="compound">Ingredientes</ref> &amp;</type>
          <declname>ingredientes</declname>
        </param>
        <briefdescription>
<para>Entrada de <ref refid="class_ingredientes" kindref="compound">Ingredientes</ref> a istream. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is</parametername>
</parameternamelist>
<parameterdescription>
<para>stream de entrada </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ingredientes</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_ingredientes" kindref="compound">Ingredientes</ref> que reciben los ingredientes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Los</parametername>
</parameternamelist>
<parameterdescription>
<para>ingredientes leidos en ingredientes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>La entrada tiene el formato ingredientes con <emphasis>ingrediente</emphasis> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ingredientes.h" line="174" column="20"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>T.D.A <ref refid="class_ingredientes" kindref="compound">Ingredientes</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>Una instancia <emphasis>ingredientes</emphasis> del tipo de datos abstracto <computeroutput><ref refid="class_ingredientes" kindref="compound">Ingredientes</ref></computeroutput> es un objeto que representa un conjunto de ingredientes. A su vez, esta instancia ingredientes se compone de un <ref refid="class_vector___dinamico" kindref="compound">Vector_Dinamico</ref> de <ref refid="class_ingredientes" kindref="compound">Ingredientes</ref>.</para>
<para>Lo representamos como</para>
<para>datos</para>
<para>Un ejemplo de su uso: <programlisting filename="test_ingredientes.cpp"></programlisting></para>
<para><simplesect kind="author"><para>Miguel Ángel Campos Cubillas </para>
</simplesect>
<simplesect kind="date"><para>Octubre 2019 </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="include/ingredientes.h" line="31" column="19" bodyfile="include/ingredientes.h" bodystart="31" bodyend="175"/>
    <listofallmembers>
      <member refid="class_ingredientes_1aaf94717166c3e624390ac5abe136d06a" prot="public" virt="non-virtual"><scope>Ingredientes</scope><name>borrarIngrediente</name></member>
      <member refid="class_ingredientes_1a7c0b7746dfc25fba382518fe8522a046" prot="public" virt="non-virtual"><scope>Ingredientes</scope><name>borrarIngredienteXNombre</name></member>
      <member refid="class_ingredientes_1a31bdcd26b6c718d1f09ea93ed5a5b0b1" prot="private" virt="non-virtual"><scope>Ingredientes</scope><name>datos</name></member>
      <member refid="class_ingredientes_1a97dea81c4db6348691c55e9db5ef3619" prot="public" virt="non-virtual"><scope>Ingredientes</scope><name>get</name></member>
      <member refid="class_ingredientes_1a2f30f251726c114a425e655a07a21d80" prot="public" virt="non-virtual"><scope>Ingredientes</scope><name>getInformacion</name></member>
      <member refid="class_ingredientes_1aeb8017d2e1182f78e3935ca72b766ef8" prot="public" virt="non-virtual"><scope>Ingredientes</scope><name>getIngrediente</name></member>
      <member refid="class_ingredientes_1ad49a4d1142a214e8c077871efed59c60" prot="public" virt="non-virtual"><scope>Ingredientes</scope><name>getIngredientesTipo</name></member>
      <member refid="class_ingredientes_1a485db5688382e8068feb4680caea9a5f" prot="public" virt="non-virtual"><scope>Ingredientes</scope><name>getNumIngredientes</name></member>
      <member refid="class_ingredientes_1a6f9df794709a67caddd0d89ab38e9ed3" prot="public" virt="non-virtual"><scope>Ingredientes</scope><name>getTipos</name></member>
      <member refid="class_ingredientes_1ab56b335eeb1662c1869d428df28fb035" prot="public" virt="non-virtual"><scope>Ingredientes</scope><name>imprimirPorTipo</name></member>
      <member refid="class_ingredientes_1a4599533b7d0530fe6fdd68006b3f0bde" prot="public" virt="non-virtual"><scope>Ingredientes</scope><name>Ingredientes</name></member>
      <member refid="class_ingredientes_1aa49df6c8d8c48cca8591a620b2d15cc3" prot="public" virt="non-virtual"><scope>Ingredientes</scope><name>insertarIngrediente</name></member>
      <member refid="class_ingredientes_1a7e56b2666e0c566ba5799d8848669dd4" prot="public" virt="non-virtual"><scope>Ingredientes</scope><name>modificaIngrediente</name></member>
      <member refid="class_ingredientes_1a11a8ab6e1628b050812fbf57b33265ea" prot="public" virt="non-virtual"><scope>Ingredientes</scope><name>operator&lt;&lt;</name></member>
      <member refid="class_ingredientes_1a2f2a26cb7e5d982fcbe248027671937d" prot="public" virt="non-virtual"><scope>Ingredientes</scope><name>operator&gt;&gt;</name></member>
      <member refid="class_ingredientes_1ac1a637a4b2fb6e7ce99f59ffea7e5eec" prot="public" virt="non-virtual"><scope>Ingredientes</scope><name>operator[]</name></member>
      <member refid="class_ingredientes_1a2279d66f71d1fdc39f8560b406d83760" prot="public" virt="non-virtual"><scope>Ingredientes</scope><name>operator[]</name></member>
      <member refid="class_ingredientes_1a44039882f9e87d1e6fc0a97bf9cac579" prot="public" virt="non-virtual"><scope>Ingredientes</scope><name>ordenaPorNombre</name></member>
      <member refid="class_ingredientes_1aea7daaebce685d1edacada5fd79034bb" prot="public" virt="non-virtual"><scope>Ingredientes</scope><name>ordenaPorTipo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
