<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="class_ingredientes_1_1iterator" kind="class" language="C++" prot="public">
    <compoundname>Ingredientes::iterator</compoundname>
    <includes refid="ingredientes_8h" local="no">ingredientes.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_ingredientes_1_1iterator_1aee7b139c3e51613587b38e47f67a1f38" prot="private" static="no" mutable="no">
        <type>vector&lt; <ref refid="class_ingrediente" kindref="compound">Ingrediente</ref> &gt;::<ref refid="class_ingredientes_1_1iterator" kindref="compound">iterator</ref></type>
        <definition>vector&lt;Ingrediente&gt;::iterator Ingredientes::iterator::it</definition>
        <argsstring></argsstring>
        <name>it</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ingredientes.h" line="214" column="27" bodyfile="include/ingredientes.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_ingredientes_1_1iterator_1a1a8c7f96971fda9a9b26b6d2a72e548b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Ingredientes</definition>
        <argsstring></argsstring>
        <name>Ingredientes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ingredientes.h" line="244" column="9" bodyfile="include/ingredientes.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_ingredientes_1_1iterator_1afc3cec14af8dad173afab85ad29e04e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ingredientes_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
        <definition>iterator&amp; Ingredientes::iterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ingredientes.h" line="217" column="19" bodyfile="include/ingredientes.h" bodystart="217" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="class_ingredientes_1_1iterator_1ac201c4291be38d5c5f0ce85b189ae029" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ingredientes_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
        <definition>iterator&amp; Ingredientes::iterator::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ingredientes.h" line="222" column="19" bodyfile="include/ingredientes.h" bodystart="222" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="class_ingredientes_1_1iterator_1ae0a925e6da382460e59d85aa21984930" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ingrediente" kindref="compound">Ingrediente</ref> &amp;</type>
        <definition>Ingrediente&amp; Ingredientes::iterator::operator*</definition>
        <argsstring>()</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ingredientes.h" line="227" column="22" bodyfile="include/ingredientes.h" bodystart="227" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="class_ingredientes_1_1iterator_1a1ae8b326420322ce6ecded7dc8212f4a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ingredientes::iterator::operator==</definition>
        <argsstring>(const iterator &amp;i)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_ingredientes_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ingredientes.h" line="231" column="14" bodyfile="include/ingredientes.h" bodystart="231" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="class_ingredientes_1_1iterator_1a08b673984da153bde04dd66096e455dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ingredientes::iterator::operator!=</definition>
        <argsstring>(const iterator &amp;i)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_ingredientes_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ingredientes.h" line="235" column="14" bodyfile="include/ingredientes.h" bodystart="235" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="class_ingredientes_1_1iterator_1a763e4a199da02fa210d84467b8b07d05" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ingredientes_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
        <definition>iterator&amp; Ingredientes::iterator::operator=</definition>
        <argsstring>(const iterator &amp;i)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_ingredientes_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ingredientes.h" line="239" column="19" bodyfile="include/ingredientes.h" bodystart="239" bodyend="242"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Clase para iterar sobre los ingredientes. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/ingredientes.h" line="212" column="19" bodyfile="include/ingredientes.h" bodystart="212" bodyend="245"/>
    <listofallmembers>
      <member refid="class_ingredientes_1_1iterator_1a1a8c7f96971fda9a9b26b6d2a72e548b" prot="public" virt="non-virtual"><scope>Ingredientes::iterator</scope><name>Ingredientes</name></member>
      <member refid="class_ingredientes_1_1iterator_1aee7b139c3e51613587b38e47f67a1f38" prot="private" virt="non-virtual"><scope>Ingredientes::iterator</scope><name>it</name></member>
      <member refid="class_ingredientes_1_1iterator_1a08b673984da153bde04dd66096e455dd" prot="public" virt="non-virtual"><scope>Ingredientes::iterator</scope><name>operator!=</name></member>
      <member refid="class_ingredientes_1_1iterator_1ae0a925e6da382460e59d85aa21984930" prot="public" virt="non-virtual"><scope>Ingredientes::iterator</scope><name>operator*</name></member>
      <member refid="class_ingredientes_1_1iterator_1afc3cec14af8dad173afab85ad29e04e5" prot="public" virt="non-virtual"><scope>Ingredientes::iterator</scope><name>operator++</name></member>
      <member refid="class_ingredientes_1_1iterator_1ac201c4291be38d5c5f0ce85b189ae029" prot="public" virt="non-virtual"><scope>Ingredientes::iterator</scope><name>operator--</name></member>
      <member refid="class_ingredientes_1_1iterator_1a763e4a199da02fa210d84467b8b07d05" prot="public" virt="non-virtual"><scope>Ingredientes::iterator</scope><name>operator=</name></member>
      <member refid="class_ingredientes_1_1iterator_1a1ae8b326420322ce6ecded7dc8212f4a" prot="public" virt="non-virtual"><scope>Ingredientes::iterator</scope><name>operator==</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
