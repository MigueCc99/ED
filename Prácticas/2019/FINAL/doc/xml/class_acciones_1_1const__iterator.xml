<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="class_acciones_1_1const__iterator" kind="class" language="C++" prot="public">
    <compoundname>Acciones::const_iterator</compoundname>
    <includes refid="acciones_8h" local="no">acciones.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_acciones_1_1const__iterator_1aa7d7cf986ec74dbf5e96f9b7f2f4baa9" prot="private" static="no" mutable="no">
        <type>map&lt; string, unsigned char &gt;::<ref refid="class_acciones_1_1const__iterator" kindref="compound">const_iterator</ref></type>
        <definition>map&lt;string,unsigned char&gt;::const_iterator Acciones::const_iterator::it</definition>
        <argsstring></argsstring>
        <name>it</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acciones.h" line="107" column="28" bodyfile="include/acciones.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_acciones_1_1const__iterator_1aab022c3664dbdb7864f97a2f7ce9d187" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Acciones</definition>
        <argsstring></argsstring>
        <name>Acciones</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acciones.h" line="136" column="7" bodyfile="include/acciones.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_acciones_1_1const__iterator_1a70518a787e393da44250fc736b86ffb7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_acciones_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
        <definition>const_iterator&amp; Acciones::const_iterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acciones.h" line="110" column="23" bodyfile="include/acciones.h" bodystart="110" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="class_acciones_1_1const__iterator_1abd7f63a7d54d9964a84a86c13bb2a56f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_acciones_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
        <definition>const_iterator&amp; Acciones::const_iterator::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acciones.h" line="115" column="23" bodyfile="include/acciones.h" bodystart="115" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="class_acciones_1_1const__iterator_1a31032c415088897f67e13a75bb4e8017" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const pair&lt; const string, unsigned char &gt; &amp;</type>
        <definition>const pair&lt;const string,unsigned char &gt;&amp; Acciones::const_iterator::operator*</definition>
        <argsstring>()</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acciones.h" line="120" column="19" bodyfile="include/acciones.h" bodystart="120" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="class_acciones_1_1const__iterator_1aa0be39e09b28fc8c17ce30abf281faf8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Acciones::const_iterator::operator==</definition>
        <argsstring>(const const_iterator &amp;i)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_acciones_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acciones.h" line="124" column="12" bodyfile="include/acciones.h" bodystart="124" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="class_acciones_1_1const__iterator_1a2cf09528bff1fcdd1e9739cbe1da1306" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Acciones::const_iterator::operator!=</definition>
        <argsstring>(const const_iterator &amp;i)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_acciones_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acciones.h" line="128" column="12" bodyfile="include/acciones.h" bodystart="128" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="class_acciones_1_1const__iterator_1a466b40276ce388a20d81200f5eb96b53" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_acciones_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
        <definition>const_iterator&amp; Acciones::const_iterator::operator=</definition>
        <argsstring>(const const_iterator &amp;i)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_acciones_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acciones.h" line="132" column="23" bodyfile="include/acciones.h" bodystart="132" bodyend="135"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Clase para iterar sobre las acciones. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/acciones.h" line="105" column="23" bodyfile="include/acciones.h" bodystart="105" bodyend="137"/>
    <listofallmembers>
      <member refid="class_acciones_1_1const__iterator_1aab022c3664dbdb7864f97a2f7ce9d187" prot="public" virt="non-virtual"><scope>Acciones::const_iterator</scope><name>Acciones</name></member>
      <member refid="class_acciones_1_1const__iterator_1aa7d7cf986ec74dbf5e96f9b7f2f4baa9" prot="private" virt="non-virtual"><scope>Acciones::const_iterator</scope><name>it</name></member>
      <member refid="class_acciones_1_1const__iterator_1a2cf09528bff1fcdd1e9739cbe1da1306" prot="public" virt="non-virtual"><scope>Acciones::const_iterator</scope><name>operator!=</name></member>
      <member refid="class_acciones_1_1const__iterator_1a31032c415088897f67e13a75bb4e8017" prot="public" virt="non-virtual"><scope>Acciones::const_iterator</scope><name>operator*</name></member>
      <member refid="class_acciones_1_1const__iterator_1a70518a787e393da44250fc736b86ffb7" prot="public" virt="non-virtual"><scope>Acciones::const_iterator</scope><name>operator++</name></member>
      <member refid="class_acciones_1_1const__iterator_1abd7f63a7d54d9964a84a86c13bb2a56f" prot="public" virt="non-virtual"><scope>Acciones::const_iterator</scope><name>operator--</name></member>
      <member refid="class_acciones_1_1const__iterator_1a466b40276ce388a20d81200f5eb96b53" prot="public" virt="non-virtual"><scope>Acciones::const_iterator</scope><name>operator=</name></member>
      <member refid="class_acciones_1_1const__iterator_1aa0be39e09b28fc8c17ce30abf281faf8" prot="public" virt="non-virtual"><scope>Acciones::const_iterator</scope><name>operator==</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
