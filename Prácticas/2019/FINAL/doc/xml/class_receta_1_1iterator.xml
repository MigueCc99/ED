<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="class_receta_1_1iterator" kind="class" language="C++" prot="public">
    <compoundname>Receta::iterator</compoundname>
    <includes refid="receta_8h" local="no">receta.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_receta_1_1iterator_1a869d7e040d04c76572d68df666a0145f" prot="private" static="no" mutable="no">
        <type>list&lt; pair&lt; string, unsigned int &gt; &gt;::<ref refid="class_receta_1_1iterator" kindref="compound">iterator</ref></type>
        <definition>list&lt;pair&lt;string, unsigned int&gt; &gt;::iterator Receta::iterator::it</definition>
        <argsstring></argsstring>
        <name>it</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/receta.h" line="195" column="25" bodyfile="include/receta.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_receta_1_1iterator_1aa89c775820d25d3de1743f0d60d69cdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Receta</definition>
        <argsstring></argsstring>
        <name>Receta</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/receta.h" line="225" column="9" bodyfile="include/receta.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_receta_1_1iterator_1ac317a274806d5a997b05c1769e778f0c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_receta_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
        <definition>iterator&amp; Receta::iterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/receta.h" line="198" column="19" bodyfile="include/receta.h" bodystart="198" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="class_receta_1_1iterator_1a947072ef3cfd2c22edf441b46bbc527b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_receta_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
        <definition>iterator&amp; Receta::iterator::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/receta.h" line="203" column="19" bodyfile="include/receta.h" bodystart="203" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="class_receta_1_1iterator_1ae10c28b878201c54167aeebab9807a9f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>pair&lt; string, unsigned int &gt; &amp;</type>
        <definition>pair&lt;string, unsigned int&gt;&amp; Receta::iterator::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/receta.h" line="208" column="15" bodyfile="include/receta.h" bodystart="208" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="class_receta_1_1iterator_1a19f1086a313909f0fcd3a387d0c01d94" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Receta::iterator::operator==</definition>
        <argsstring>(const iterator &amp;i) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_receta_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/receta.h" line="212" column="14" bodyfile="include/receta.h" bodystart="212" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="class_receta_1_1iterator_1a1d348facec39ca741fca3fa6aaa8a934" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Receta::iterator::operator!=</definition>
        <argsstring>(const iterator &amp;i) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_receta_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/receta.h" line="216" column="14" bodyfile="include/receta.h" bodystart="216" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="class_receta_1_1iterator_1abcf49f80de72cc14c8b0e49c5fcab73f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_receta_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
        <definition>iterator&amp; Receta::iterator::operator=</definition>
        <argsstring>(const iterator &amp;i)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_receta_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/receta.h" line="220" column="19" bodyfile="include/receta.h" bodystart="220" bodyend="223"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Clase para iterar sobre los ingredientes. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/receta.h" line="193" column="19" bodyfile="include/receta.h" bodystart="193" bodyend="227"/>
    <listofallmembers>
      <member refid="class_receta_1_1iterator_1a869d7e040d04c76572d68df666a0145f" prot="private" virt="non-virtual"><scope>Receta::iterator</scope><name>it</name></member>
      <member refid="class_receta_1_1iterator_1a1d348facec39ca741fca3fa6aaa8a934" prot="public" virt="non-virtual"><scope>Receta::iterator</scope><name>operator!=</name></member>
      <member refid="class_receta_1_1iterator_1ae10c28b878201c54167aeebab9807a9f" prot="public" virt="non-virtual"><scope>Receta::iterator</scope><name>operator*</name></member>
      <member refid="class_receta_1_1iterator_1ac317a274806d5a997b05c1769e778f0c" prot="public" virt="non-virtual"><scope>Receta::iterator</scope><name>operator++</name></member>
      <member refid="class_receta_1_1iterator_1a947072ef3cfd2c22edf441b46bbc527b" prot="public" virt="non-virtual"><scope>Receta::iterator</scope><name>operator--</name></member>
      <member refid="class_receta_1_1iterator_1abcf49f80de72cc14c8b0e49c5fcab73f" prot="public" virt="non-virtual"><scope>Receta::iterator</scope><name>operator=</name></member>
      <member refid="class_receta_1_1iterator_1a19f1086a313909f0fcd3a387d0c01d94" prot="public" virt="non-virtual"><scope>Receta::iterator</scope><name>operator==</name></member>
      <member refid="class_receta_1_1iterator_1aa89c775820d25d3de1743f0d60d69cdd" prot="public" virt="non-virtual"><scope>Receta::iterator</scope><name>Receta</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
